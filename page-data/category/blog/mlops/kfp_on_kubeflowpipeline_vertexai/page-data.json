{"componentChunkName":"component---src-templates-post-tsx","path":"/category/blog/mlops/kfp_on_kubeflowpipeline_vertexai/","result":{"data":{"site":{"siteMetadata":{"title":"어서OpShow","author":"장수완","siteUrl":"https://ssuwani.github.io"}},"markdownRemark":{"id":"5a1f4e11-eb97-5ba0-8a7d-5f9a35478e1c","excerpt":"KFP v2 on Kubeflow Pipeline and Vertex AI 하나의 코드로 두 플랫폼에 Pipeline 을 실행해보자 Reference Introducing Kubeflow Pipelines SDK v2 Google Cloud - build pipeline Kubeflow…","html":"<h1 id=\"kfp-v2-on-kubeflow-pipeline-and-vertex-ai\" style=\"position:relative;\"><a href=\"#kfp-v2-on-kubeflow-pipeline-and-vertex-ai\" aria-label=\"kfp v2 on kubeflow pipeline and vertex ai permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>KFP v2 on Kubeflow Pipeline and Vertex AI</h1>\n<blockquote>\n<p>하나의 코드로 두 플랫폼에 Pipeline 을 실행해보자</p>\n</blockquote>\n<p><strong>Reference</strong></p>\n<ul>\n<li><a href=\"https://www.kubeflow.org/docs/components/pipelines/sdk/v2/v2-compatibility/\">Introducing Kubeflow Pipelines SDK v2</a></li>\n<li><a href=\"https://cloud.google.com/vertex-ai/docs/pipelines/build-pipeline\">Google Cloud - build pipeline</a></li>\n</ul>\n<p>Kubeflow 공식문서에 kfp v2로 Kubeflow Pipeline을 배포하는 법, Google Cloud 공식문서에 kfp v2로 Vertex Ai에 배포하는법이 설명되어 있다. 이 포스팅은 그 두개를 합친 포스팅밖에 되지 못한다. 각 플랫폼마다의 장단점이 존재하는 것 같아 필요에 따라 배포 플팻폼을 변경할 수 있다는 점을 상기하기 위해 포스팅을 작성해본다.</p>\n<p>내가 생각하는 Vertex AI의 단점</p>\n<ul>\n<li>조금 더 추상적이다. Vertex AI는 Kubeflow Pipeline을 기반으로 사용자 친화적으로 만든 Wrapper이다. 그렇기 때문인 것 같은데, Pipeline을 만들고 실행을 하면 Component들이 결국 Pod 단위로 실행되는데, <code class=\"language-text\">kubectl</code> 로 Pod의 상태가 조회가 안된다. <a href=\"https://towardsdatascience.com/serverless-machine-learning-pipelines-with-vertex-ai-an-introduction-30af8b53188e\">여기</a>를 보니 마침내 Vertex AI에서 serverless Pipeline을 실행할 수 있게 되었다는데 그게 Pod의 조회가 안되는 것과 상관이 있는지 모르겠다. 여튼 안된다. Kubeflow Pipeline에서는 된다.</li>\n</ul>\n<p>단점의 내용은 확실하지 않다. 그리고 장점에 대해서 언급하기 위해 공부하던 중 비교해놓은 <a href=\"https://cloud.google.com/vertex-ai/docs/pipelines/build-pipeline#compare\">공식문서</a>가 있다.! 읽다보니 이정도면 그냥 Vertex AI를 사용하는게 맞지 않나싶다.. Vertex AI에선 Cloud Storage를 지정하면 알아서 마운트된 볼륨으로 서 이용할 수 있어 되게 편했다. 하지만 Kubeflow Pipeline에서는 안되는 듯 하다. **그래서 단순히 배포 방식을 변경한다고 해서 두개의 플랫폼에서 정상적으로 동작한다고 단언하지는 못한다. ** </p>\n<p><em>kfp version은 ‘1.8.6’ 이다</em></p>\n<h2 id=\"add-component-작성하기\" style=\"position:relative;\"><a href=\"#add-component-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"add component 작성하기 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Add Component 작성하기</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> kfp\n<span class=\"token keyword\">import</span> kfp<span class=\"token punctuation\">.</span>dsl <span class=\"token keyword\">as</span> dsl\n<span class=\"token keyword\">from</span> kfp<span class=\"token punctuation\">.</span>v2<span class=\"token punctuation\">.</span>dsl <span class=\"token keyword\">import</span> component\n\n<span class=\"token decorator annotation punctuation\">@component</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">float</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">'''Calculates sum of two arguments'''</span>\n    <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b\n\n<span class=\"token decorator annotation punctuation\">@dsl<span class=\"token punctuation\">.</span>pipeline</span><span class=\"token punctuation\">(</span>\n    name<span class=\"token operator\">=</span><span class=\"token string\">'addition-pipeline'</span><span class=\"token punctuation\">,</span>\n    description<span class=\"token operator\">=</span><span class=\"token string\">'An example pipeline that performs addition calculations.'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\"># pipeline_root='gs://my-pipeline-root/example-pipeline'</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">add_pipeline</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">:</span> <span class=\"token builtin\">float</span><span class=\"token operator\">=</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    add_task <span class=\"token operator\">=</span> add<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id=\"kubeflow-pipelines에-배포하기\" style=\"position:relative;\"><a href=\"#kubeflow-pipelines%EC%97%90-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0\" aria-label=\"kubeflow pipelines에 배포하기 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Kubeflow Pipelines에 배포하기</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">KUBEFLOW_PIPELINES_HOST <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;Kubeflow Pipelines HOST URL>\"</span>\n\n<span class=\"token keyword\">from</span> kfp <span class=\"token keyword\">import</span> compiler\ncompiler<span class=\"token punctuation\">.</span>Compiler<span class=\"token punctuation\">(</span>mode<span class=\"token operator\">=</span>kfp<span class=\"token punctuation\">.</span>dsl<span class=\"token punctuation\">.</span>PipelineExecutionMode<span class=\"token punctuation\">.</span>V2_COMPATIBLE<span class=\"token punctuation\">)</span>\\\n<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span>pipeline_func<span class=\"token operator\">=</span>add_pipeline<span class=\"token punctuation\">,</span> package_path<span class=\"token operator\">=</span><span class=\"token string\">'pipeline.yaml'</span><span class=\"token punctuation\">)</span>\n\nclient <span class=\"token operator\">=</span> kfp<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">(</span>host<span class=\"token operator\">=</span>KUBEFLOW_PIPELINES_HOST<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># run the pipeline in v2 compatibility mode</span>\nclient<span class=\"token punctuation\">.</span>create_run_from_pipeline_func<span class=\"token punctuation\">(</span>\n    add_pipeline<span class=\"token punctuation\">,</span>\n    arguments<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    mode<span class=\"token operator\">=</span>kfp<span class=\"token punctuation\">.</span>dsl<span class=\"token punctuation\">.</span>PipelineExecutionMode<span class=\"token punctuation\">.</span>V2_COMPATIBLE<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id=\"vertex-ai-pipeline에-배포하기\" style=\"position:relative;\"><a href=\"#vertex-ai-pipeline%EC%97%90-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0\" aria-label=\"vertex ai pipeline에 배포하기 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vertex AI Pipeline에 배포하기</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">PROJECT_ID <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;Project ID>\"</span>\nREGION <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;Region: where you want deploy>\"</span>\nBUCKET_URI <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;Bucket URI>\"</span>\n<span class=\"token keyword\">from</span> kfp<span class=\"token punctuation\">.</span>v2 <span class=\"token keyword\">import</span> compiler\n<span class=\"token keyword\">from</span> kfp<span class=\"token punctuation\">.</span>v2<span class=\"token punctuation\">.</span>google<span class=\"token punctuation\">.</span>client <span class=\"token keyword\">import</span> AIPlatformClient\ncompiler<span class=\"token punctuation\">.</span>Compiler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span>pipeline_func<span class=\"token operator\">=</span>add_pipeline<span class=\"token punctuation\">,</span>\n        package_path<span class=\"token operator\">=</span><span class=\"token string\">'add_pipeline.json'</span><span class=\"token punctuation\">)</span>\n\napi_client <span class=\"token operator\">=</span> AIPlatformClient<span class=\"token punctuation\">(</span>project_id<span class=\"token operator\">=</span>PROJECT_ID<span class=\"token punctuation\">,</span> region<span class=\"token operator\">=</span>REGION<span class=\"token punctuation\">)</span>\n\nresponse <span class=\"token operator\">=</span> api_client<span class=\"token punctuation\">.</span>create_run_from_job_spec<span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'add_pipeline.json'</span><span class=\"token punctuation\">,</span>\n    pipeline_root<span class=\"token operator\">=</span>BUCKET_URI<span class=\"token punctuation\">,</span>\n    parameter_values<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'b'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/category/blog/mlops/kfp_on_kubeflowpipeline_vertexai/#kfp-v2-on-kubeflow-pipeline-and-vertex-ai\">KFP v2 on Kubeflow Pipeline and Vertex AI</a></p>\n<ul>\n<li>\n<p><a href=\"/category/blog/mlops/kfp_on_kubeflowpipeline_vertexai/#add-component-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\">Add Component 작성하기</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/category/blog/mlops/kfp_on_kubeflowpipeline_vertexai/#kubeflow-pipelines%EC%97%90-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0\">Kubeflow Pipelines에 배포하기</a></li>\n<li><a href=\"/category/blog/mlops/kfp_on_kubeflowpipeline_vertexai/#vertex-ai-pipeline%EC%97%90-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0\">Vertex AI Pipeline에 배포하기</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[MLOps] KFP v2 on Kubeflow Pipeline and Vertex AI","description":"","date":"2021.10.28","emoji":"👷","category":"blog"}}},"pageContext":{"slug":"/category/blog/mlops/kfp_on_kubeflowpipeline_vertexai/","relatedPosts":[{"node":{"fields":{"slug":"/category/blog/interview/"},"frontmatter":{"title":"[면접준비] minimum 질문&답변","date":"2021.11.22","emoji":"❓","category":"blog"}}},{"node":{"fields":{"slug":"/category/blog/hackerrank_certification/"},"frontmatter":{"title":"해커랭크 인증서 발급 후기","date":"2021.11.19","emoji":"📚","category":"blog"}}},{"node":{"fields":{"slug":"/category/blog/m1-tensorflow/"},"frontmatter":{"title":"[Tensorflow] M1에서 Tensorflow GPU 사용하기 (Monterey)","date":"2021.11.13","emoji":"💪","category":"blog"}}},{"node":{"fields":{"slug":"/category/blog/effective-python/"},"frontmatter":{"title":"[책] 파이썬 코딩의 기술","date":"2021.11.02","emoji":"📚","category":"blog"}}},{"node":{"fields":{"slug":"/category/blog/mlops/simple_model_deploy_mnist/"},"frontmatter":{"title":"[MLOps] Vertex AI에서 모델 배포하기 (MNIST)","date":"2021.11.01","emoji":"🏃","category":"blog"}}}]}}}