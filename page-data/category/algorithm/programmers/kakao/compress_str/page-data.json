{"componentChunkName":"component---src-templates-post-tsx","path":"/category/algorithm/programmers/kakao/compress_str/","result":{"data":{"site":{"siteMetadata":{"title":"어서OpShow","author":"장수완","siteUrl":"https://ssuwani.github.io"}},"markdownRemark":{"id":"20523c88-cb83-5d27-a570-76c5423f15ec","excerpt":"프로그래머스 문자열 압축 문제 보러가기 https://programmers.co.kr/learn/courses/30/lessons/60057 문제 요약 문자열이 주어졌을 때 반복되는 단위로 압축해서 제일 작은 문자열 길이를 반환하라. 조건 문자열의 길이는 1,00…","html":"<div class=\"custom-block info\"><div class=\"custom-block-heading\">프로그래머스 문자열 압축 문제 보러가기</div><div class=\"custom-block-body\"><p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/60057\">https://programmers.co.kr/learn/courses/30/lessons/60057</a></p></div></div>\n<h2 id=\"문제-요약\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%9A%94%EC%95%BD\" aria-label=\"문제 요약 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 요약</h2>\n<p>문자열이 주어졌을 때 반복되는 단위로 압축해서 제일 작은 문자열 길이를 반환하라.</p>\n<h4 id=\"조건\" style=\"position:relative;\"><a href=\"#%EC%A1%B0%EA%B1%B4\" aria-label=\"조건 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>조건</h4>\n<ul>\n<li>문자열의 길이는 1,000 이하</li>\n</ul>\n<h2 id=\"문제-접근-방식\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%A0%91%EA%B7%BC-%EB%B0%A9%EC%8B%9D\" aria-label=\"문제 접근 방식 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 접근 방식</h2>\n<ol>\n<li>입력되는 문자열의 길이가 충분히 작으므로 완전 탐색해야 겠다는 생각! </li>\n<li>1개씩 쪼개는 것부터 전체 길이의 절반씩으로 쪼개는 것까지를 반복하면 됨</li>\n<li>temp 변수에 비교해야 할 값을 수정해 나감</li>\n</ol>\n<h2 id=\"풀이코드\" style=\"position:relative;\"><a href=\"#%ED%92%80%EC%9D%B4%EC%BD%94%EB%93%9C\" aria-label=\"풀이코드 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>풀이코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    length <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    result <span class=\"token operator\">=</span><span class=\"token string\">\"\"</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">for</span> cut <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token operator\">//</span><span class=\"token number\">2</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        count <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n        tempStr <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>cut<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>cut<span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span>cut<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span>tempStr<span class=\"token punctuation\">:</span>\n                count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> count <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                    count <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n                result <span class=\"token operator\">+=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> tempStr\n                tempStr <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span>cut<span class=\"token punctuation\">]</span>\n                count <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">if</span> count <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            count <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n        result <span class=\"token operator\">+=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> tempStr\n        length<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        result <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/category/algorithm/programmers/kakao/compress_str/#%EB%AC%B8%EC%A0%9C-%EC%9A%94%EC%95%BD\">문제 요약</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/category/algorithm/programmers/kakao/compress_str/#%EC%A1%B0%EA%B1%B4\">조건</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/category/algorithm/programmers/kakao/compress_str/#%EB%AC%B8%EC%A0%9C-%EC%A0%91%EA%B7%BC-%EB%B0%A9%EC%8B%9D\">문제 접근 방식</a></li>\n<li><a href=\"/category/algorithm/programmers/kakao/compress_str/#%ED%92%80%EC%9D%B4%EC%BD%94%EB%93%9C\">풀이코드</a></li>\n</ul>","frontmatter":{"title":"[프로그래머스-2020 카카오 블라인드 채용] 문자열 압축","description":"","date":"2021.10.26","emoji":"🗜️","category":"algorithm"}}},"pageContext":{"slug":"/category/algorithm/programmers/kakao/compress_str/","relatedPosts":[{"node":{"fields":{"slug":"/category/algorithm/boj/greedy/flip/"},"frontmatter":{"title":"[백준-그리디] 뒤집기","date":"2021.12.09","emoji":"1️⃣","category":"algorithm"}}},{"node":{"fields":{"slug":"/category/algorithm/boj/greedy/lost_bracket/"},"frontmatter":{"title":"[백준-그리디] 잃어버린 괄호","date":"2021.12.08","emoji":"1️⃣","category":"algorithm"}}},{"node":{"fields":{"slug":"/category/algorithm/boj/greedy/treasure/"},"frontmatter":{"title":"[백준-그리디] 보물","date":"2021.12.07","emoji":"1️⃣","category":"algorithm"}}},{"node":{"fields":{"slug":"/category/algorithm/programmers/kakao/fail_ratio/"},"frontmatter":{"title":"[프로그래머스-2019 카카오 블라인드 채용] 실패율","date":"2021.12.03","emoji":"1️⃣","category":"algorithm"}}},{"node":{"fields":{"slug":"/category/algorithm/boj/implement/perfect_square/"},"frontmatter":{"title":"[백준-구현] 완전 제곱수","date":"2021.12.02","emoji":"1️⃣","category":"algorithm"}}}]}}}