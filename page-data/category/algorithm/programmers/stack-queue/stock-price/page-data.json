{"componentChunkName":"component---src-templates-post-tsx","path":"/category/algorithm/programmers/stack-queue/stock-price/","result":{"data":{"site":{"siteMetadata":{"title":"어서OpShow","author":"장수완","siteUrl":"https://ssuwani.github.io"}},"markdownRemark":{"id":"65407f90-6bfe-50da-8662-a2534f0aa97d","excerpt":"프로그래머스 주식 가격 문제 보러가기 https://programmers.co.kr/learn/courses/30/lessons/4258…","html":"<div class=\"custom-block info\"><div class=\"custom-block-heading\">프로그래머스 주식 가격 문제 보러가기</div><div class=\"custom-block-body\"><p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/42584\">https://programmers.co.kr/learn/courses/30/lessons/42584</a></p></div></div>\n<h4 id=\"배운점\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%9A%B4%EC%A0%90\" aria-label=\"배운점 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배운점</h4>\n<ul>\n<li>시간 복잡도만으로 시간초과를 판단해선 안된다.</li>\n</ul>\n<h2 id=\"문제-요약\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%9A%94%EC%95%BD\" aria-label=\"문제 요약 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 요약</h2>\n<p>주식 가격이 입력된다. 각 시점의 가격에서 몇초간 떨어지지 않았는지를 반환하라.</p>\n<h4 id=\"조건\" style=\"position:relative;\"><a href=\"#%EC%A1%B0%EA%B1%B4\" aria-label=\"조건 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>조건</h4>\n<ul>\n<li>prices의 길이는 2 이상 100,000 이하</li>\n</ul>\n<h2 id=\"문제-접근-방식\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%A0%91%EA%B7%BC-%EB%B0%A9%EC%8B%9D\" aria-label=\"문제 접근 방식 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 접근 방식</h2>\n<ol>\n<li>특정 시점에서 다른 시점을 탐색해야 하므로 당연히 이중 반복문을 사용 해야겠다고 생각했다.</li>\n<li>시간초과 문제로 통과하지 못했다. </li>\n<li>이중 for 문을 사용하면 시간초과가 무조건 나는건지 확인하려고 코드를 작성해서 시간초과가 나는지 확인하였다.</li>\n<li>이중 반복문을 사용하면 안되겠다고 생각했지만 다른 방법이 생각이 않나 다시 시도하였다..</li>\n<li>통과했다. 3에서 이중 반복문을 테스트했던 것보다 빠르겠지만 <strong>2와의 차이는 여전히 모르겠다.</strong></li>\n</ol>\n<h2 id=\"풀이코드\" style=\"position:relative;\"><a href=\"#%ED%92%80%EC%9D%B4%EC%BD%94%EB%93%9C\" aria-label=\"풀이코드 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>풀이코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>prices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>prices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>prices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            cnt <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            <span class=\"token keyword\">if</span> prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> prices<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n        answer<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>cnt<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> answer</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id=\"이중-for문-시간초과-확인\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%A4%91-for%EB%AC%B8-%EC%8B%9C%EA%B0%84%EC%B4%88%EA%B3%BC-%ED%99%95%EC%9D%B8\" aria-label=\"이중 for문 시간초과 확인 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이중 For문 시간초과 확인</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">for</span> target <span class=\"token keyword\">in</span> prices<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> target <span class=\"token keyword\">in</span> prices<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">pass</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>위의 코드는 이중 반복문을 사용하면 안되는건지 확인하기 위함이였다.<br/>\n정확성 테스트는 런타임 에러로 실패했고 효율성 테스트는 시간초과로 실패했다. 이는 이중 for문을 사용하면 효율성 테스트에서 통과할 수 없음을 의미한다고 생각했다. -> 하지만 같은 $O(n**2)$ 이더라도 반복문을 중간에 멈추는 break를 통해 전체적인 시간을 줄이면 테스트에 성공할 수도 있다.(내 정답 코드는 이렇게 성공했다고 생각한다.)</p>\n<h4 id=\"효율성-문제-prices-리스트-길이-확인\" style=\"position:relative;\"><a href=\"#%ED%9A%A8%EC%9C%A8%EC%84%B1-%EB%AC%B8%EC%A0%9C-prices-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EA%B8%B8%EC%9D%B4-%ED%99%95%EC%9D%B8\" aria-label=\"효율성 문제 prices 리스트 길이 확인 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>효율성 문제 prices 리스트 길이 확인</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>prices<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">50000</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> Error\n\n<span class=\"token keyword\">for</span> target <span class=\"token keyword\">in</span> prices<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> target <span class=\"token keyword\">in</span> prices<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">pass</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>위의 코드에의 결과는 예상대로:</p>\n<ul>\n<li>정확성 테스트: 런타임에러 </li>\n<li>효율성 테스트: 시간초과</li>\n</ul>\n<p>prices의 제한조건은 리스트의 길이 100,000이하이다. 만약 prices의 길이가 50,000 보다 작다면 바로 Error를 return 해서 런타임 에러가 발생 했을것이다. 이는 큰 의미가 있는건 아니지만 시간초과 문제의 원인이 시간복잡도임에 정당성을 더 부여했다고 생각한다.</p>\n<h4 id=\"첫번째-코드-효율성-시간초과-에러\" style=\"position:relative;\"><a href=\"#%EC%B2%AB%EB%B2%88%EC%A7%B8-%EC%BD%94%EB%93%9C-%ED%9A%A8%EC%9C%A8%EC%84%B1-%EC%8B%9C%EA%B0%84%EC%B4%88%EA%B3%BC-%EC%97%90%EB%9F%AC\" aria-label=\"첫번째 코드 효율성 시간초과 에러 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>첫번째 코드 (효율성 시간초과 에러)</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>prices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> target <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>prices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j<span class=\"token punctuation\">,</span> other <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>prices<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> target <span class=\"token operator\">></span> other<span class=\"token punctuation\">:</span>\n                result<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            result<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>prices<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> result</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>나는 지금 개발자들의 가장 큰 난제 중 하나인 “이게 왜 돼?” 상태에 있다.. ㅠㅠ </p>\n<p>혹시 이 글을 보는 누군가가 설명해주리라 생각하며 사건의 개요를 적어본다.</p>\n<blockquote>\n<p>문제를 보자마자 바로 위의 첫번째 코드로 작성하였다. 시간초과를 받았고 앞서 설명한 디버깅 기법을 거치면서 이중반복문이 문제일거라 확신하였다. 이중반복을 사용하지 않고 어떻게 풀지 생각하다가 하나의 반복문에 <code class=\"language-text\">map</code>으로 문제를 해결했지만 이 역시 이중반복을 사용하는것과 같이 O(n**2)의 시간복잡도를 가졌다. 어떻게 풀 수 있을지 도저히 감이 잡히지 않아, 다시 이중 반복문을 시도하였다. 됐다.. 첫번째 풀이와 다른점을 찾지 못하겠다.</p>\n</blockquote>","tableOfContents":"<ul>\n<li>\n<ul>\n<li>\n<ul>\n<li><a href=\"/category/algorithm/programmers/stack-queue/stock-price/#%EB%B0%B0%EC%9A%B4%EC%A0%90\">배운점</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/category/algorithm/programmers/stack-queue/stock-price/#%EB%AC%B8%EC%A0%9C-%EC%9A%94%EC%95%BD\">문제 요약</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/category/algorithm/programmers/stack-queue/stock-price/#%EC%A1%B0%EA%B1%B4\">조건</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/category/algorithm/programmers/stack-queue/stock-price/#%EB%AC%B8%EC%A0%9C-%EC%A0%91%EA%B7%BC-%EB%B0%A9%EC%8B%9D\">문제 접근 방식</a></li>\n<li>\n<p><a href=\"/category/algorithm/programmers/stack-queue/stock-price/#%ED%92%80%EC%9D%B4%EC%BD%94%EB%93%9C\">풀이코드</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/category/algorithm/programmers/stack-queue/stock-price/#%EC%9D%B4%EC%A4%91-for%EB%AC%B8-%EC%8B%9C%EA%B0%84%EC%B4%88%EA%B3%BC-%ED%99%95%EC%9D%B8\">이중 For문 시간초과 확인</a></li>\n<li><a href=\"/category/algorithm/programmers/stack-queue/stock-price/#%ED%9A%A8%EC%9C%A8%EC%84%B1-%EB%AC%B8%EC%A0%9C-prices-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EA%B8%B8%EC%9D%B4-%ED%99%95%EC%9D%B8\">효율성 문제 prices 리스트 길이 확인</a></li>\n<li><a href=\"/category/algorithm/programmers/stack-queue/stock-price/#%EC%B2%AB%EB%B2%88%EC%A7%B8-%EC%BD%94%EB%93%9C-%ED%9A%A8%EC%9C%A8%EC%84%B1-%EC%8B%9C%EA%B0%84%EC%B4%88%EA%B3%BC-%EC%97%90%EB%9F%AC\">첫번째 코드 (효율성 시간초과 에러)</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[프로그래머스-스택/큐] 주식 가격","description":"","date":"2021.10.08","emoji":"📈","category":"algorithm"}}},"pageContext":{"slug":"/category/algorithm/programmers/stack-queue/stock-price/","relatedPosts":[{"node":{"fields":{"slug":"/category/algorithm/boj/greedy/flip/"},"frontmatter":{"title":"[백준-그리디] 뒤집기","date":"2021.12.09","emoji":"1️⃣","category":"algorithm"}}},{"node":{"fields":{"slug":"/category/algorithm/boj/greedy/lost_bracket/"},"frontmatter":{"title":"[백준-그리디] 잃어버린 괄호","date":"2021.12.08","emoji":"1️⃣","category":"algorithm"}}},{"node":{"fields":{"slug":"/category/algorithm/boj/greedy/treasure/"},"frontmatter":{"title":"[백준-그리디] 보물","date":"2021.12.07","emoji":"1️⃣","category":"algorithm"}}},{"node":{"fields":{"slug":"/category/algorithm/programmers/kakao/fail_ratio/"},"frontmatter":{"title":"[프로그래머스-2019 카카오 블라인드 채용] 실패율","date":"2021.12.03","emoji":"1️⃣","category":"algorithm"}}},{"node":{"fields":{"slug":"/category/algorithm/boj/implement/perfect_square/"},"frontmatter":{"title":"[백준-구현] 완전 제곱수","date":"2021.12.02","emoji":"1️⃣","category":"algorithm"}}}]}}}